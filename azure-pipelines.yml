# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

pool:
  vmImage: 'macOS-latest'

steps:
#- task: Gradle@2
#  inputs:
#    workingDirectory: ''
#    gradleWrapperFile: 'gradlew'
#    gradleOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/TEST-*.xml'
#    tasks: 'assembleDebug test'
#  displayName: gradlew assembleDebug test
#
#- task: DownloadSecureFile@1
#  name: caCertificate
#  displayName: 'Download CA certificate'
#  inputs:
#    secureFile: 'keystore_debug.jks'
#
#- task: AndroidSigning@3
#  inputs:
#    apkFiles: '**/*.apk'
#    apksignerKeystoreFile: '$(caCertificate.secureFilePath)'
#    apksignerKeystorePassword: '$(my_key_android)'
#    apksignerKeystoreAlias: 'keystore_debug'
#    apksignerKeyPassword: '$(my_key_android)'
#    zipalign: false

- task: CmdLine@2
  inputs:
    script: |
      touch hola.txt
      
      ls
      mkdir tmp
      sudo cp -R $ANDROID_HOME/emulator tmp/.
      zip -r emulator.zip tmp/.
#      FOO="some value"
#tar -czf emulator.tar.gz hola.txt
#      echo "##vso[task.setvariable variable=FOO_PASS]$FOO"
#      echo "ANDROID_HOME = "$ANDROID_HOME
#      echo "+ ------------------------------ +"
#      echo "|     $ANDROID_HOME        |"
#      echo "+ ------------------------------ +"
#      ls -la $ANDROID_HOME
#      echo "+ ------------------------------ +"
#      echo "|     $ANDROID_HOME/emulator        |"
#      echo "+ ------------------------------ +"
#      ls -la $ANDROID_HOME/emulator
#      cd $ANDROID_HOME/emulator
#      echo "+ ------------------------------ +"
#      echo "|     tar emulator        |"
#      echo "+ ------------------------------ +"
#      tar -czf emulator.tar.gz $ANDROID_HOME/emulator/.
#      echo "+ ------------------------------ +"
#      echo "|     ANDROID_HOME/tools      |"
#      echo "+ ------------------------------ +"
#      ls -la $ANDROID_HOME/tools
#      echo "+ ------------------------------ +"
#      echo "|     ANDROID_HOME/tools /emulator     |"
#      echo "+ ------------------------------ +"
#      ls -la $ANDROID_HOME/tools/emulator
#- task: CmdLine@2
#  inputs:
#    script: |
#
#      # Install AVD files
#      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'
#      
#      # Create emulator
#      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-27;google_apis;x86' --force
#      
#      $ANDROID_HOME/emulator/emulator -list-avds
#      
#      echo "Starting emulator"
#      
#      # Start emulator in background
#      nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot > /dev/null 2>&1 &
#      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
#      
#      $ANDROID_HOME/platform-tools/adb devices
#      
#      echo "Emulator started"
#  displayName: Emulator started
#- task: CopyFiles@2
#  inputs:
#    contents: '**/*.apk'
#    targetFolder: '$(build.artifactStagingDirectory)'
#  displayName: Copy .apk files to artifact staging directory
#
#- task: PublishBuildArtifacts@1
#  inputs:
#    pathToPublish: '$(build.artifactStagingDirectory)'
#    artifactName: 'drop'
#    artifactType: 'container'
#  displayName: Publish artifacts
#- task: UniversalPackages@0
#  displayName: 'Publicar Tools de App Movil Android'
#  inputs:
#    command: 'publish'
#    publishDirectory: '$(Build.Repository.LocalPath)/android'
#    feedsToUsePublish: 'internal'
#    vstsFeedPublish: '2350c86d-8131-4c2f-8b24-2d770358cf59/ed66161d-0ea4-45f8-9254-0872bf66165b'
#    vstsFeedPackagePublish: 'app-deploy-tools-android'
#    versionOption: 'minor'
#    packagePublishDescription: 'Tools de despliegue de App Movil Android'
#    verbosity: 'Information'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: 'emulator.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: CmdLine@2
  inputs:
    script: |
      echo "FOO  "$FOO
      echo "FOO_PASS  "$(FOO_PASS)
      